syntax = "proto3";
option java_multiple_files = true;

//services exposed to the Client
service HospitalService {
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc RetrievePatientInfo (PatientInfoRequest) returns (PatientInfoReply) {}
  rpc Login(LoginRequest) returns (LoginReply) {}
  rpc Register(RegisterRequest) returns (RegisterReply) {}
  rpc RegisterCertificate(RegisterCertificateRequest) returns (RegisterCertificateReply) {}
  rpc WritePatientInfo(WritePatientInfoRequest) returns(WritePatientInfoReply) {}
  rpc CheckCertificate(CheckCertificateRequest) returns(CheckCertificateReply) {}
}

enum Role {
  LAB_EMPLOYEE = 0;
  DOCTOR = 1;
  NURSE = 2;
  PATIENT_SERVICES_ASSISTANT = 3;
  CLINICAL_ASSISTANT = 4;
  PORTER_VOLUNTEER = 5;
  WARD_CLERK = 6;
  ADMIN = 7;
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

message PatientInfoRequest {
  int32 patientID = 1;
  Role role = 2;
  repeated int32 selections = 3;
}
message PatientInfoReply {
  bool permission = 2;
  oneof result {
    MedicalRecords records = 1;
    string pdpAdvice = 3;
  }
}

message MedicalRecords {
  string nameSurname = 1;
  PersonalData personalData = 3;
  repeated string problems = 4;
  repeated string medications = 5;
  string healthHistory = 6;
  string allergies = 7;
  repeated VisitDate visitsHistory = 8;
  int32 patientId = 10;
  repeated string labResults = 11;
}

message PersonalData {
  optional string homeAddress = 4;
  string email = 5;
  int32 healthNumber = 6;
}

message VisitDate {
  int32 year = 1;
  int32 month = 2;
  int32 day = 3;
}

message LoginRequest {
  string username = 1;
  bytes password = 2;
}

message LoginReply {
  enum Code {
    SUCCESS = 0;
    WRONGUSER = 1;
    WRONGPASS = 2;
  }
  //  enum Role {
  //    LAB_EMPLOYEE = 0;
  //    DOCTOR = 1;
  //    NURSE = 2;
  //    PATIENT_SERVICES_ASSISTANT = 3;
  //    CLINICAL_ASSISTANT = 4;
  //    PORTER_VOLUNTEER = 5;
  //    WARD_CLERK = 6;
  //  }
  Code code = 1;
  Role role = 2;
  int32 userId = 3;
}

message RegisterRequest {
  string username = 1;
  bytes password = 2;
  Role role = 3;
}

message RegisterReply {
  bool ok = 1;
}

message WritePatientInfoRequest{
  int32  userID = 1;
  Role role = 2;
  int32 patientID = 3;
  oneof fields {
    string nameSurname = 10;
    PersonalData personalData = 11;
    string problems = 12;
    string medications = 13;
    string healthHistoryRecord = 14;
    string allergy = 15;
    VisitDate visit = 16;
    string labResult = 18;
  }
  SignatureM signature = 4;
}

message WritePatientInfoReply{
  bool ok = 1;
  int32 patientId = 2;
}

//services for XACML permission validation
//interaction between application server (PEP) and PDP
service AccessControlService {
  rpc DummyValidationForTesting (DummyValidationRequest) returns (DummyValidationReply) {}
  rpc ValidateAccess (AccessControlRequest) returns (AccessControlReply);
}

message DummyValidationRequest {

}

message DummyValidationReply {

}

message AccessControlRequest {
  string xacmlRequest = 1;
}

message AccessControlReply {
  string xacmlReply = 2;
}

message RegisterCertificateRequest{
  string certificate = 1;
  string nonce = 2;
  SignatureM signedNonce = 3;
  int32 userId = 4;
}

message RegisterCertificateReply{
  bool ok = 1;
}

message SignatureM{
  bytes signature = 1;
  string cryptAlgo = 2;
  int32 nonce = 3;
}

message PatientInfo{
  string nameSurname = 1;
  string email = 2;
  string homeAddress = 3;
  int32 healthNumber = 4;
  string healthHistory = 5;
  string allergies = 6;
}

message CheckCertificateRequest{
  int32 userId = 1;
}

message CheckCertificateReply{
  bool valid = 1;
  string certificate = 2;
}